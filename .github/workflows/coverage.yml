# This is a basic workflow to help you get started with Actions

name: Code Coverage

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  measure:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2

      # Build and execute tests
      - name: Build
        env: 
          CARGO_INCREMENTAL: 0
          RUSTFLAGS: "-Zprofile 
                      -Clink-dead-code 
                      -Copt-level=0 
                      -Ccodegen-units=1 
                      -Zpanic_abort_tests 
                      -Cpanic=abort 
                      -Coverflow-checks=off 
                      -Zinstrument-coverage"
           LLVM_PROFILE_FILE: "profile.profraw"
        run: |
          cargo +nightly build
          cargo +nightly test --message-format=json | jq -r "select(.profile.test == true) | .filenames[]" > filenames.txt

      # Extracte code coverage information
      - name: Extract Code Coverage
        run: |
          llvm-profdata merge -sparse -o profile.profdata *.profraw 
          llvm-cov show --show-expansions --show-line-counts-or-regions --ignore-filename-regex="/rustc" --format=text -instr-profile=profile.profdata <filenames.txt
          bash <(curl -s https://codecov.io/bash)


