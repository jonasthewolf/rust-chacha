# This is a basic workflow to help you get started with Actions

name: Code Coverage

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  measure:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Install LLVM
      - name: Install LLVM
        run: |
          wget https://apt.llvm.org/llvm.sh
          chmod +x llvm.sh
          sudo ./llvm.sh 12

      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      # Install nightly rust toolchain (required to use LLVM code coverage instrumentation)
      - uses: actions-rs/toolchain@v1
        with:
          toolchain: nightly
          components: llvm-tools-preview
          
      # Build and execute tests
      - name: Build and test
        env: 
          CARGO_INCREMENTAL: 0
          RUSTFLAGS: "-Zprofile -Clink-dead-code -Copt-level=0 -Ccodegen-units=1 -Zpanic_abort_tests -Cpanic=abort -Cpanic=abort -Coverflow-checks=off -Zinstrument-coverage"
          LLVM_PROFILE_FILE: "profile.profraw"
        run: |
          cargo +nightly build
          cargo +nightly test --no-run --message-format=json | jq -r "select(.profile.test == true) | .filenames[]" | grep -v dSYM - > filenames.txt
          cargo +nightly test 

      # Extracte code coverage information
      - name: Extract Code Coverage
        run: |
          /usr/lib/llvm-12/bin/llvm-profdata merge -sparse -o profile.profdata profile.profraw 
          /usr/lib/llvm-12/bin/llvm-cov show --show-expansions --show-line-counts-or-regions --ignore-filename-regex="/rustc" --format=text -instr-profile=profile.profdata `cat filenames.txt` > coverage.txt
      
      # Upload to codecov.io
      - name: Upload to codecov.io
        run: |
          bash <(curl -s https://codecov.io/bash) -f coverage.txt


